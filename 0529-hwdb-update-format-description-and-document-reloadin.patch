From 4109212fef5d1e4bdda00d713d3f215ce6cb785b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zbigniew=20J=C4=99drzejewski-Szmek?= <zbyszek@in.waw.pl>
Date: Thu, 7 Aug 2014 21:48:57 -0400
Subject: [PATCH] hwdb: update format description and document reloading

https://bugs.freedesktop.org/show_bug.cgi?id=82311
(cherry picked from commit fa9d4be3f1f4a792b2f3624c2a08fe9cc6ce6e54)
---
 hwdb/60-keyboard.hwdb | 32 +++++++++++++++++++++++---------
 1 file changed, 23 insertions(+), 9 deletions(-)

diff --git a/hwdb/60-keyboard.hwdb b/hwdb/60-keyboard.hwdb
index ea94df57b1..dc1b78fc24 100644
--- a/hwdb/60-keyboard.hwdb
+++ b/hwdb/60-keyboard.hwdb
@@ -28,19 +28,33 @@
 #    driver, <vendor> is the firmware-provided string exported
 #    by the kernel DMI modalias.
 #
-#  Scan codes are specified as:
-#    KEYBOARD_KEY_<hex scan code>=<key code identifier>
-#  The scan code should be expressed in hex lowercase and in
-#  full bytes, a multiple of 2 digits. The key codes are retrieved
-#  and normalized from the kernel input API header.
+# Scan codes are specified as:
+#   KEYBOARD_KEY_<hex scan code>=<key code identifier>
+# The scan code should be expressed in hex lowercase. The key codes
+# are retrieved and normalized from the kernel input API header.
 #
-#  A '!' as the first charcter of the key identifier string
-#  will add the scan code to the AT keyboard's list of scan codes
-#  where the driver will synthesize a release event and not expect
-#  it to be generated by the hardware.
+# An '!' as the first character of the key identifier string
+# will add the scan code to the AT keyboard's list of scan codes
+# where the driver will synthesize a release event and not expect
+# it to be generated by the hardware.
 #
 # To debug key presses and access scan code mapping data of
 # an input device use the commonly available tool: evtest(1).
+#
+# To update this file, create a new file
+#   /etc/udev/hwdb.d/70-keyboad.hwdb
+# and add your rules there. To load the new rules execute (as root):
+#   udevadm hwdb --update
+#   udevadm trigger /dev/input/eventXX
+# where /dev/input/eventXX is the keyboard in question. If in
+# doubt, simply use /dev/input/event* to reload all input rules.
+#
+# If your changes are generally applicable, open a bug report on
+#   http://bugs.freedesktop.org/enter_bug.cgi?product=systemd
+# and include your new rules, a description of the device, and the
+# output of
+#   udevadm info /dev/input/eventXX
+# (or /dev/input/event*).
 
 ##########################################
 # Acer
