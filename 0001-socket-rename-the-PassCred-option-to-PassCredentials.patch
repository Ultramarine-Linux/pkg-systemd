From 271b032a053f9d4a1be271bb052276ae27fe36c6 Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Sat, 31 Dec 2011 01:07:49 +0100
Subject: [PATCH] socket: rename the PassCred= option to PassCredentials=,
 since we don't want to needlessly abbreviate options unless
 they are very well established

---
 man/systemd.socket.xml           |    8 ++++----
 src/dbus-socket.c                |    4 ++--
 src/load-fragment-gperf.gperf.m4 |    2 +-
 src/socket.c                     |    2 +-
 units/syslog.socket              |    2 +-
 units/systemd-journald.socket    |    1 +
 units/systemd-shutdownd.socket   |    2 +-
 7 files changed, 11 insertions(+), 10 deletions(-)

Index: systemd-26/man/systemd.socket.xml
===================================================================
--- systemd-26.orig/man/systemd.socket.xml
+++ systemd-26/man/systemd.socket.xml
@@ -480,10 +480,10 @@
                         </varlistentry>
 
                         <varlistentry>
-                                <term><varname>PassCred=</varname></term>
+                                <term><varname>PassCredentials=</varname></term>
                                 <listitem><para>Takes a boolean
                                 value. This controls the SO_PASSCRED
-                                option, which allows UNIX sockets to
+                                socket option, which allows UNIX sockets to
                                 receive the credentials of the sending
                                 process in an ancillary message.
                                 Defaults to
Index: systemd-26/src/dbus-socket.c
===================================================================
--- systemd-26.orig/src/dbus-socket.c
+++ systemd-26/src/dbus-socket.c
@@ -49,7 +49,7 @@
         "  <property name=\"IPTTL\" type=\"i\" access=\"read\"/>\n"     \
         "  <property name=\"PipeSize\" type=\"t\" access=\"read\"/>\n"  \
         "  <property name=\"FreeBind\" type=\"b\" access=\"read\"/>\n"  \
-        "  <property name=\"PassCred\" type=\"b\" access=\"read\"/>\n" \
+        "  <property name=\"PassCredentials\" type=\"b\" access=\"read\"/>\n" \
         "  <property name=\"Mark\" type=\"i\" access=\"read\"/>\n"      \
         "  <property name=\"MaxConnections\" type=\"u\" access=\"read\"/>\n" \
         "  <property name=\"NAccepted\" type=\"u\" access=\"read\"/>\n" \
@@ -108,7 +108,7 @@ DBusHandlerResult bus_socket_message_han
                 { "org.freedesktop.systemd1.Socket", "IPTTL",          bus_property_append_int,          "i", &u->socket.ip_ttl          },
                 { "org.freedesktop.systemd1.Socket", "PipeSize",       bus_property_append_size,         "t", &u->socket.pipe_size       },
                 { "org.freedesktop.systemd1.Socket", "FreeBind",       bus_property_append_bool,         "b", &u->socket.free_bind       },
-                { "org.freedesktop.systemd1.Socket", "PassCred",       bus_property_append_bool,         "b", &u->socket.pass_cred       },
+                { "org.freedesktop.systemd1.Socket", "PassCredentials",bus_property_append_bool,         "b", &u->socket.pass_cred       },
                 { "org.freedesktop.systemd1.Socket", "Mark",           bus_property_append_int,          "i", &u->socket.mark            },
                 { "org.freedesktop.systemd1.Socket", "MaxConnections", bus_property_append_unsigned,     "u", &u->socket.max_connections },
                 { "org.freedesktop.systemd1.Socket", "NConnections",   bus_property_append_unsigned,     "u", &u->socket.n_connections   },
Index: systemd-26/src/socket.c
===================================================================
--- systemd-26.orig/src/socket.c
+++ systemd-26/src/socket.c
@@ -404,7 +404,7 @@ static void socket_dump(Unit *u, FILE *f
                 "%sDirectoryMode: %04o\n"
                 "%sKeepAlive: %s\n"
                 "%sFreeBind: %s\n"
-                "%sPassCred: %s\n"
+                "%sPassCredentials: %s\n"
                 "%sTCPCongestion: %s\n",
                 prefix, socket_state_to_string(s->state),
                 prefix, socket_address_bind_ipv6_only_to_string(s->bind_ipv6_only),
Index: systemd-26/units/syslog.socket
===================================================================
--- systemd-26.orig/units/syslog.socket
+++ systemd-26/units/syslog.socket
@@ -18,7 +18,7 @@ Wants=syslog.target
 [Socket]
 ListenDatagram=/dev/log
 SocketMode=0666
-PassCred=yes
+PassCredentials=yes
 
 # The service we activate on incoming traffic is
 # systemd-kmsg-syslogd.service. That doesn't mean however, that this
Index: systemd-26/units/systemd-shutdownd.socket
===================================================================
--- systemd-26.orig/units/systemd-shutdownd.socket
+++ systemd-26/units/systemd-shutdownd.socket
@@ -15,4 +15,4 @@ Before=sockets.target
 [Socket]
 ListenDatagram=/run/systemd/shutdownd
 SocketMode=0600
-PassCred=yes
+PassCredentials=yes
Index: systemd-26/src/load-fragment.c
===================================================================
--- systemd-26.orig/src/load-fragment.c
+++ systemd-26/src/load-fragment.c
@@ -1945,7 +1945,7 @@ static int load_from_path(Unit *u, const
                 { "Mark",                   config_parse_int,             0, &u->socket.mark,                                 "Socket"  },
                 { "PipeSize",               config_parse_size,            0, &u->socket.pipe_size,                            "Socket"  },
                 { "FreeBind",               config_parse_bool,            0, &u->socket.free_bind,                            "Socket"  },
-                { "PassCred",               config_parse_bool,            0, &u->socket.pass_cred,                            "Socket"  },
+                { "PassCredentials",        config_parse_bool,            0, &u->socket.pass_cred,                            "Socket"  },
                 { "TCPCongestion",          config_parse_string,          0, &u->socket.tcp_congestion,                       "Socket"  },
                 { "Service",                config_parse_socket_service,  0, &u->socket,                                      "Socket"  },
                 EXEC_CONTEXT_CONFIG_ITEMS(u->socket.exec_context, "Socket"),
